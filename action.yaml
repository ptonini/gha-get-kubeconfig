name: get-kubeconfig
description: ''
inputs:
  kubeconfig_source:
    description: ''
    required: true
  vault_addr:
    description: ''
    required: false
  vault_method:
    description: ''
    required: false
  vault_path:
    description: ''
    required: false
  vault_role:
    description: ''
    required: false
  vault_k8s_role_path:
    description: ''
    required: false
  aws_role:
    description: ''
    required: false
  aws_region:
    description: ''
    required: false
  aws_eks_cluster:
    description: ''
    required: false
  azure_client_id:
    description: ''
    required: false
  azure_tenant_id:
    description: ''
    required: false
  azure_subscription_id:
    description: ''
    required: false
  azure_resource_group:
    description: ''
    required: false
  azure_aks_cluster:
    description: ''
    required: false
runs:
  using: composite
  steps:
    # Hashicorp Vault
    - uses: hashicorp/vault-action@v2
      if: inputs.kubeconfig_source == 'vault'
      with:
        url: ${{ inputs.vault_addr }}
        method: ${{ inputs.vault_method }}
        path: ${{ inputs.vault_path }}
        role: ${{ inputs.vault_role }}
        secrets: ${{ inputs.vault_k8s_role_path }} kube_config | KUBECONFIG_CONTENT;
    - run: echo "${KUBECONFIG_CONTENT}" > ${KUBECONFIG} && chmod 0600 ${KUBECONFIG}
      if: inputs.kubeconfig_source == 'vault'
      shell: bash
    # AWS EKS
    - uses: aws-actions/configure-aws-credentials@v4
      if: inputs.kubeconfig_source == 'aws'
      with:
        role-to-assume: ${{ inputs.aws_role }}
        aws-region: ${{ inputs.aws_region }}
    - run: aws eks update-kubeconfig --region ${{ inputs.aws_region }} --name ${{ inputs.aws_eks_cluster }}
      if: inputs.kubeconfig_source == 'aws'
      shell: bash
    # Azure AKS
    - uses: azure/login@v1
      if: inputs.kubeconfig_source == 'azure'
      with:
        client-id: ${{ inputs.azure_client_id }}
        tenant-id: ${{ inputs.azure_tenant_id }}
        subscription-id: ${{ inputs.azure_subscription_id }}
    - uses: azure/aks-set-context@v3
      if: inputs.kubeconfig_source == 'azure'
      with:
        admin: true
        resource-group: ${{ inputs.azure_resource_group }}
        cluster-name: ${{ inputs.azure_aks_cluster }}
    # Verify credentials
    - run: kubectl get svc
      shell: bash
